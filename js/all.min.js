//InÃ­cio de APP
var APP = APP || {};
APP._nameSpace = "APP";
APP.iniciar = function (Modulos) {
    var quantidadeDeModulos = arguments.length;
    if (Modulos !== undefined && Modulos !== APP) {
        APP.setUp();
    }
    if (quantidadeDeModulos == 0 || quantidadeDeModulos == 1) {
        this.iniciarModulos(Modulos || APP);
    } else if (quantidadeDeModulos > 1) {
        APP.iniciarModulos.apply(this, arguments);
    }
};
APP.setUp = function () {};
APP.iniciarModulos = function (Modulo) {
    var Filho, i = 0;
    if (arguments.length > 1) {
        for (; i < arguments.length; i++) {
            APP.iniciarModulos(arguments[i]);
        }
        return;
    }
    if (typeof Modulo != "object") return false;
    if (Modulo.hasOwnProperty('setUp') && typeof Modulo.setUp == "function") {
        Modulo.setUp();
    } else {
        return false;
    }
    for (Filho in Modulo) {
        if (Modulo.hasOwnProperty(Filho) === true) {
            if (Modulo[Filho] !== null && typeof Modulo[Filho] == "object") {
                Modulo[Filho]['pai'] = function () {
                    return Modulo;
                };
                Modulo[Filho]['_nameSpace'] = (Modulo['_nameSpace'] || "APP") + '.' + Filho;
                APP.iniciarModulos(Modulo[Filho]);
            }
        }
    }
    return false;
};
APP.nameSpace = function (nameSpace, arrayDeParametros) {
    var no, nos, escopos, alvo, i;
    if (arrayDeParametros !== undefined && arrayDeParametros instanceof Array === false) {
        arrayDeParametros = [arrayDeParametros];
    }
    escopos = [window];
    nos = nameSpace.split('.');
    for (i = 0; i < nos.length; i++) {
        no = nos[i];
        if (escopos[i].hasOwnProperty(no)) {
            escopos.push(escopos[i][no]);
        }
    }
    alvo = escopos.pop();
    if (typeof alvo == 'function') {
        return alvo.apply(escopos.pop(), arrayDeParametros || []);
    } else {
        return alvo;
    }
}
//FIM de APP
var APP = APP || {};

APP.Widget = {
  _tela: null,
  setUp: function() {
    var that = this;
    var button = document.querySelector('.open-bar-google-translator-app');
    var closeButton = document.querySelector('.close-google-translator-app');

    button.addEventListener('click', function (event) {
     that.openCloseDatailsBar();
    });
     
    closeButton.addEventListener('click', function () {
      that.exiteForApplication();
    });
  },
  openCloseDatailsBar : function(event) {
    var translationsContent = event.target.parentNode;

    if (translationsContent.classList.contains('off-bar-google-translator-app')) {
      translationsContent.classList.remove('off-bar-google-translator-app');
      translationsContent.classList.add('on-bar-google-translator-app');
    }else{
      translationsContent.classList.add('off-bar-google-translator-app');
      translationsContent.classList.remove('on-bar-google-translator-app');
    }
  },
  exiteForApplication : function() {
    var application = document.querySelector('.google-translator-global-app');
   
    application.classList.remove('translating-google-translator-app');
  },
  setLanguageName : function(language) {
    switch(language){
      case "af":
        language = "Afrikaans";
        break;
      case "sq":
        language = "Albanian";
        break;
      case "ar":
        language = "Arabic";
        break;
      case "az":
        language = "Azerbaijani";
        break;
      case "eu":
        language = "Basque";
        break;
      case "bn":
        language = "Bengali";
        break;
      case "be":
        language = "Belarusian";
        break;
      case "bg":
        language = "Bulgarian";
        break;
      case "ca":
        language = "Catalan";
        break;
      case "zh-CN":
        language = "Chinese Simplified";
        break;
      case "zh-TW":
        language = "Chinese Traditional";
        break;
      case "hr":
        language = "Croatian";
        break;
      case "cs":
        language = "Czech";
        break;
      case "da":
        language = "Danish";
        break;
      case "nl":
        language = "Dutch";
        break;
      case "en":
        language = "English";
        break;
      case "eo":
        language = "Esperanto";
        break;
      case "et":
        language = "Estonian";
        break;
      case "tl":
        language = "Filipino";
        break;
      case "fi":
        language = "Finnish";
        break;
      case "fr":
        language = "French";
        break;
      case "gl":
        language = "Galician";
        break;
      case "ka":
        language = "Georgian";
        break;
      case "de":
        language = "German";
        break;
      case "el":
        language = "Greek";
        break;
      case "gu":
        language = "Gujarati";
        break;
      case "ht":
        language = "Haitian Creole";
        break;
      case "iw":
        language = "Hebrew";
        break;
      case "hi":
        language = "Hindi";
        break;
      case "hu":
        language = "Hungarian";
        break;
      case "is":
        language = "Icelandic";
        break;
      case "id":
        language = "Indonesian";
        break;
      case "ga":
        language = "Irish";
        break;
      case "it":
        language = "Italian";
        break;
      case "js":
        language = "Japanese";
        break;      
      case "kn":
        language = "Kannada";
        break;
      case "ko":
        language = "Korean";
        break;
      case "la":
        language = "Latin";
        break;
      case "lv":
        language = "Latvian";
        break;
      case "lt":
        language = "Lithuanian";
        break;
      case "mk":
        language = "Macedonian";
        break;
      case "ms":
        language = "Malay";
        break;
      case "mt":
        language = "Maltese";
        break;
      case "no":
        language = "Norwegian";
        break;
      case "fa":
        language = "Persian";
        break;
      case "pl":
        language = "Polish";
        break;
      case "pt":
        language = "Portuguese";
        break;
      case "ro":
        language = "Romanian";
        break;
      case "ru":
        language = "Russian";
        break;
      case "sr":
        language = "Serbian";
        break;
      case "sk":
        language = "Slovak";
        break;
      case "sl":
        language = "Slovenian";
        break;
      case "es":
        language = "Spanish";
        break;
      case "sw":
        language = "Swahili";
        break;
      case "sv":
        language = "Swedish";
        break;
      case "ta":
        language = "Tamil";
        break;
      case "te":
        language = "Telugu";
        break;
      case "th":
        language = "Thai";
        break;
      case "tr":
        language = "Turkish";
        break;
      case "uk":
        language = "Ukrainian";
        break;
      case "ur":
        language = "Urdu";
        break;
      case "vi":
        language = "Vietnamese";
        break;
      case "cy":
        language = "Welsh";
        break;
      case "yi":
        language = "Yiddish";
        break;        
    }
    return language 
  }
}
var APP = APP || {};
    APP.Widget = APP.Widget || {};

APP.Widget.Request = {
  _tela: null,
  setUp: function() {
  },
  translateRequest : function(destinationLanguage, queryWords) {

    $.ajax({
      url: 'http://rmdias.com/google-translator/translate.php?d='+ destinationLanguage +'&q=' + queryWords,
      type: 'GET',
      dataType: 'json'
    })
    .success(function(data) {
      APP.Widget.Request.successRequest(data);
    })
    .fail(function(data) {
      APP.Widget.Request.failRequest(data);
    })
    .always(function(data) {
      APP.Widget.Request.afterRequest(data);
    });
  },
  successRequest : function(data) {
    var application = document.querySelector('.google-translator-global-app'),
        translatedText = document.querySelector('.translated-words-box-google-translator-app .words-google-translator-app'),
        translatedLang = document.querySelector('.original-words-box-google-translator-app .language-google-translator-app');

    console.log("success", data.responseData);

    translatedLang.innerText = APP.Widget.setLanguageName(data.responseData.detectedSourceLanguage);
    translatedText.innerText = data.responseData.translatedText;

    application.classList.add('translating-google-translator-app');
  },
  failRequest : function(data) {
    console.log("We were unable to translate this word :(");
  },
  afterRequest : function(data) {
    console.log("complete");
  }
}
var APP = APP || {};
    APP.Widget = APP.Widget || {};

APP.Widget.GetSelection = {
  _tela: null,
  setUp: function() {
    var that = this,
    htmlDocument = document.querySelector('body:not(.google-translator-app-global-app)');
    
    htmlDocument.addEventListener('keyup', function () {
      that.doSomethingWithSelectedText();
    });

    htmlDocument.addEventListener('mouseup', function () {
      that.doSomethingWithSelectedText();
    });
  },
  getSelectedText : function() {
    var text = "";
    if (typeof window.getSelection != "undefined") {
      text = window.getSelection().toString();
    } else if (typeof document.selection != "undefined" && document.selection.type == "Text") {
      text = document.selection.createRange().text;
    }
    return text.trim();
  },
  doSomethingWithSelectedText : function() {
    var selectedText = APP.Widget.GetSelection.getSelectedText(),
        destinationLanguage = 'pt';
    
    if (
      selectedText
      && selectedText != " "
      && selectedText != undefined
      && selectedText != 'undefined'
      && selectedText != document.querySelector('.original-words-box-google-translator-app .words-google-translator-app').innerText 
      && selectedText != document.querySelector('.translated-words-box-google-translator-app .words-google-translator-app').innerText
      && selectedText != document.querySelector('.original-words-box-google-translator-app .language-google-translator-app').innerText 
      && selectedText != document.querySelector('.translated-words-box-google-translator-app .language-google-translator-app').innerText
      && selectedText.indexOf(document.querySelector('.original-words-box-google-translator-app .words-google-translator-app').innerText) > 0
      && selectedText.indexOf(document.querySelector('.translated-words-box-google-translator-app .words-google-translator-app').innerText) > 0
      && selectedText.indexOf(document.querySelector('.original-words-box-google-translator-app .language-google-translator-app').innerText) > 0
      && selectedText.indexOf(document.querySelector('.translated-words-box-google-translator-app .language-google-translator-app').innerText) > 0
      ){

      var originalText = document.querySelector('.original-words-box-google-translator-app .words-google-translator-app');
      var translatedLang = document.querySelector('.translated-words-box-google-translator-app .language-google-translator-app');

      originalText.innerText = selectedText;
      translatedLang.innerText = APP.Widget.setLanguageName(destinationLanguage);

      APP.Widget.Request.translateRequest(destinationLanguage ,selectedText);
    }
  }
}