//InÃ­cio de APP
var APP = APP || {};
APP._nameSpace = "APP";
APP.iniciar = function (Modulos) {
    var quantidadeDeModulos = arguments.length;
    if (Modulos !== undefined && Modulos !== APP) {
        APP.setUp();
    }
    if (quantidadeDeModulos == 0 || quantidadeDeModulos == 1) {
        this.iniciarModulos(Modulos || APP);
    } else if (quantidadeDeModulos > 1) {
        APP.iniciarModulos.apply(this, arguments);
    }
};
APP.setUp = function () {};
APP.iniciarModulos = function (Modulo) {
    var Filho, i = 0;
    if (arguments.length > 1) {
        for (; i < arguments.length; i++) {
            APP.iniciarModulos(arguments[i]);
        }
        return;
    }
    if (typeof Modulo != "object") return false;
    if (Modulo.hasOwnProperty('setUp') && typeof Modulo.setUp == "function") {
        Modulo.setUp();
    } else {
        return false;
    }
    for (Filho in Modulo) {
        if (Modulo.hasOwnProperty(Filho) === true) {
            if (Modulo[Filho] !== null && typeof Modulo[Filho] == "object") {
                Modulo[Filho]['pai'] = function () {
                    return Modulo;
                };
                Modulo[Filho]['_nameSpace'] = (Modulo['_nameSpace'] || "APP") + '.' + Filho;
                APP.iniciarModulos(Modulo[Filho]);
            }
        }
    }
    return false;
};
APP.nameSpace = function (nameSpace, arrayDeParametros) {
    var no, nos, escopos, alvo, i;
    if (arrayDeParametros !== undefined && arrayDeParametros instanceof Array === false) {
        arrayDeParametros = [arrayDeParametros];
    }
    escopos = [window];
    nos = nameSpace.split('.');
    for (i = 0; i < nos.length; i++) {
        no = nos[i];
        if (escopos[i].hasOwnProperty(no)) {
            escopos.push(escopos[i][no]);
        }
    }
    alvo = escopos.pop();
    if (typeof alvo == 'function') {
        return alvo.apply(escopos.pop(), arrayDeParametros || []);
    } else {
        return alvo;
    }
}
//FIM de APP
var APP = APP || {};

APP.Widget = {
  _tela: null,
  setUp: function() {
    var that = this;
    var button = document.querySelector('.open-bar');
    var closeButton = document.querySelector('.close-application');

    button.addEventListener('click', function (event) {
     that.openCloseDatailsBar();
    });
     
    closeButton.addEventListener('click', function () {
      that.exiteForApplication();
    });
  },
  openCloseDatailsBar : function(event) {
    var translationsContent = event.target.parentNode;

    if (translationsContent.classList.contains('off-bar')) {
      translationsContent.classList.remove('off-bar');
      translationsContent.classList.add('on-bar');
    }else{
      translationsContent.classList.add('off-bar');
      translationsContent.classList.remove('on-bar');
    }
  },
  exiteForApplication : function() {
    var application = document.querySelector('.global');
   
    application.classList.remove('translating');
  }
}
var APP = APP || {};
    APP.Widget = APP.Widget || {};

APP.Widget.Request = {
  _tela: null,
  setUp: function() {
    var that = this;
  },
  translateRequest : function(destinationLanguage, queryWords) {
    var application = document.querySelector('.global');

    $.ajax({
      url: 'http://rmdias.com/google-translator/translate.php?d='+ destinationLanguage +'&q=' + queryWords,
      type: 'GET',
      dataType: 'json'
    })
    .success(function(data) {
      console.log("success", data.responseData);

      var translatedText = document.querySelector('.translated-words-box .words');
      var translatedLang = document.querySelector('.original-words-box .language');

      translatedLang.innerText = data.responseData.detectedSourceLanguage;
      translatedText.innerText = data.responseData.translatedText;

      application.classList.add('translating');
    })
    .fail(function() {
      console.log("We were unable to translate this word :(");
    })
    .always(function() {
      console.log("complete");
    });
  }
}
var APP = APP || {};
    APP.Widget = APP.Widget || {};

APP.Widget.GetSelection = {
  _tela: null,
  setUp: function() {
    var that = this;
    document.addEventListener('keyup', function () {
      that.doSomethingWithSelectedText();
    });

    document.addEventListener('mouseup', function () {
      that.doSomethingWithSelectedText();
    });
  },
  getSelectedText : function() {
    var text = "";
    if (typeof window.getSelection != "undefined") {
      text = window.getSelection().toString();
    } else if (typeof document.selection != "undefined" && document.selection.type == "Text") {
      text = document.selection.createRange().text;
    }
    return text;
  },
  doSomethingWithSelectedText : function() {
    var selectedText = APP.Widget.GetSelection.getSelectedText(),
        destinationLanguage = 'pt';
    
    if (selectedText) {
      var originalText = document.querySelector('.original-words-box .words');
      var translatedLang = document.querySelector('.translated-words-box .language');

      originalText.innerText = selectedText;
      translatedLang.innerText = destinationLanguage;

      APP.Widget.Request.translateRequest(destinationLanguage ,selectedText);
    }
  }
}